// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AustinMCrane/resume/pkg/model (interfaces: ResumeStore)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_resume.go -package=mocks . ResumeStore
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	model "github.com/AustinMCrane/resume/pkg/model"
	gomock "go.uber.org/mock/gomock"
)

// MockResumeStore is a mock of ResumeStore interface.
type MockResumeStore struct {
	ctrl     *gomock.Controller
	recorder *MockResumeStoreMockRecorder
}

// MockResumeStoreMockRecorder is the mock recorder for MockResumeStore.
type MockResumeStoreMockRecorder struct {
	mock *MockResumeStore
}

// NewMockResumeStore creates a new mock instance.
func NewMockResumeStore(ctrl *gomock.Controller) *MockResumeStore {
	mock := &MockResumeStore{ctrl: ctrl}
	mock.recorder = &MockResumeStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResumeStore) EXPECT() *MockResumeStoreMockRecorder {
	return m.recorder
}

// GetResume mocks base method.
func (m *MockResumeStore) GetResume() (*model.Resume, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResume")
	ret0, _ := ret[0].(*model.Resume)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResume indicates an expected call of GetResume.
func (mr *MockResumeStoreMockRecorder) GetResume() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResume", reflect.TypeOf((*MockResumeStore)(nil).GetResume))
}
